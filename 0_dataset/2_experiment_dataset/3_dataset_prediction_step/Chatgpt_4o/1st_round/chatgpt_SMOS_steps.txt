1. Display the login screen to the user.2. Prompt the user to enter their username and password.3. Validate the entered username and password against the stored credentials.4. If the credentials are valid, grant access to the system; otherwise, display an error message.5. Log the user access into the system.6. Provide appropriate feedback to the user confirming successful login.7. Redirect the user to the system's main dashboard or homepage.
1. Display a list of users to the administrator2. Administrator selects a user to assign or remove roles3. Display the current roles assigned to the selected user4. Administrator chooses to assign a new role or remove an existing role5. If assigning a new role, display a list of available roles to choose from6. If removing a role, display a list of current roles to choose from7. Update the roles assigned to the user based on the administrator's selection8. Notify the administrator of the successful role assignment/removal
1. Display a list of available teachings and lecturers.2. Select a teaching and a lecturer to assign.3. Validate that the lecturer is eligible to teach the selected course.4. Assign the teaching to the lecturer.5. Display a success message indicating the teaching has been assigned to the lecturer.6. Select a teaching and a lecturer to remove the assignment.7. Validate that the teaching is currently assigned to the lecturer.8. Remove the teaching assignment from the lecturer.9. Display a success message indicating the teaching has been removed from the lecturer.
1. Display the option to associate a new student to a parent or remove existing associations.2. Select the option to associate a new student to a parent.3. Enter the necessary details of the student and the parent for the association.4. Save the association between the student and the parent.5. Display a confirmation message indicating the successful association.6. Select the option to remove existing associations.7. Search for the association to be removed based on student and parent details.8. Select and delete the association between the student and the parent.9. Display a confirmation message indicating the successful removal of the association.
1. User opens the software application.2. User navigates to the "Classes" section.3. System retrieves the list of classes from the database.4. System displays the list of classes to the user.5. User views the list of classes.6. User has the option to sort or filter the list of classes if desired.7. User can perform further actions based on the displayed list of classes.8. User closes the application when done viewing the classes.
1. Retrieve the class details from the user2. Validate the class details provided by the user3. Check if the class already exists in the archive4. If the class already exists, display an error message5. If the class does not exist, generate a unique identifier for the class6. Create a new entry in the archive with the class details and assigned identifier7. Save the new entry in the archive8. Display a success message indicating that the class has been inserted into the archive9. End the use case
1. User selects the option to view class details.2. System retrieves the class details from the database.3. System displays the class details to the user, including class name, schedule, instructor, and location.4. User reviews the class details.5. User exits the class details view screen.
1. Select the "Archive" section in the software interface.2. Locate the specific class to be deleted within the archive.3. Click on the class to select it.4. Look for the delete option, such as a trash icon or a "Delete" button.5. Click on the delete option to initiate the deletion process.6. Confirm the deletion action when prompted.7. Verify that the class has been successfully deleted from the archive.8. If necessary, refresh the archive or navigate back to ensure the class no longer appears.
1. Click on the "View Addresses" option in the software interface.2. Access the database to retrieve the list of addresses.3. Display the list of addresses on the screen.4. Implement sorting and filtering options if required.5. Allow the user to scroll through the list if it exceeds the visible area.6. Provide options to edit or delete addresses if necessary.7. Allow the user to go back to the previous screen or exit the address viewing mode.
1. Open the address archive application.2. Navigate to the "Add New Address" option.3. Enter the new address details such as street, city, state, and zip code.4. Validate the entered address details for accuracy and completeness.5. Save the new address into the archive database.6. Display a confirmation message indicating that the address has been successfully inserted.7. Close the address archive application.
1. User selects the address they want to view details for.2. System retrieves the details of the selected address from the database.3. System displays the details of the address to the user.
1. Display an error message notifying the user that the authentication data is incorrect.2. Clear the input fields for the username and password.3. Allow the user to re-enter the authentication data.4. Provide feedback to the user on successful authentication or prompt to re-enter data if authentication fails again.
1. User selects the "Addresses" option from the menu.2. User navigates to the address they want to delete.3. User selects the address they want to delete.4. User clicks on the "Delete" button.5. System prompts a confirmation message for deleting the address.6. User confirms the deletion.7. System removes the address from the archive.8. System displays a success message indicating that the address has been deleted.
1. User selects the option to manage teachings assigned to an address.2. System retrieves the list of teachings currently assigned to the selected address.3. User selects the option to either assign or remove teachings.4. If assigning, user selects the teachings to be assigned to the address.5. System verifies the selected teachings are valid and available for assignment.6. System updates the list of teachings assigned to the address accordingly.7. If removing, user selects the teachings to be removed from the address.8. System verifies the selected teachings are currently assigned to the address.9. System updates the list of teachings assigned to the address by removing the selected teachings.
1. User navigates to the "Teachings" section of the software.2. Software retrieves and displays the list of teachings available.3. User scrolls or navigates through the list to view different teachings.4. User selects a specific teaching to view more details.5. Software displays the detailed information of the selected teaching.6. User can go back to the list of teachings or navigate to other sections as needed.
1. User selects the "Add new teaching" option from the system menu.2. User enters the details of the new teaching, such as title, description, author, and date.3. System validates the input data for correctness and completeness.4. System creates a new entry in the archive for the teaching with the provided information.5. System stores the new teaching in the archive database.6. System generates a confirmation message indicating successful insertion of the teaching.7. User reviews the confirmation message and acknowledges it.8. Use case completes.
Functional steps to implement the use case "View Details of a Teaching":1. Open the application.2. Log in to the application using valid credentials.3. Navigate to the "Teachings" section of the application.4. Display a list of available teachings.5. Select a teaching from the list.6. Retrieve the details of the selected teaching.7. Display the details of the teaching on the screen.8. Provide options to view additional details, such as lesson plans or assignments, if applicable.9. Allow the user to navigate back to the list of teachings or to the home page.10. End the use case.
1. Select the teaching record to edit.2. Access the details of the selected teaching record.3. Enable editing of the necessary fields.4. Modify the details as required.5. Validate the updated information for accuracy and completeness.6. Save the changes to the teaching record.7. Update the database with the edited teaching details.8. Display a confirmation message indicating successful editing of the teaching details.
1. User selects the "Archive" option from the main menu.2. User navigates to the list of archived teachings.3. User selects the teaching they want to delete from the archive.4. User clicks on the "Delete" button.5. System prompts the user to confirm the deletion.6. User confirms the deletion.7. System removes the teaching from the archive.8. System displays a success message confirming the deletion.
1. User selects the academic year for which they want to view records.2. System retrieves the list of records for the selected academic year.3. System displays the list of records to the user.4. User can scroll through the list and view details of each record as needed.
1. User selects the option to view class registers.2. System presents a list of available class registers.3. User selects a specific class register from the list.4. System retrieves and displays the details of the selected class register.5. User views the class register details on the screen.
1. Log in to the system as an administrator.2. Navigate to the registry digitization module.3. Select the option to create a new entry.4. Enter the required data fields for the registry entry (e.g., name, address, contact information).5. Validate the entered data for accuracy and completeness.6. Save the new entry in the registry database.7. Optionally, edit or delete existing entries as needed.8. Log out of the system to complete the process.
1. User clicks on the "Logout" button.2. System displays a confirmation dialog for logging out.3. User confirms the logout action.4. System clears the user session and logs the user out.5. System redirects the user to the login page.
1. The Administrator accesses the digitization system.2. The Administrator selects the "Registry" module.3. The system prompts the Administrator to enter the required data fields for the registry entry.4. The Administrator fills in the data fields with the relevant information.5. The system validates the entered data for accuracy and completeness.6. If validation fails, the system informs the Administrator of errors and prompts for correction.7. If validation passes, the system saves the registry entry in the database.8. The system confirms to the Administrator that the data entry process is complete.
1. Log in to the system as an Administrator.2. Navigate to the user's profile or list of users.3. Select the user whose absence needs to be edited.4. Locate the absence record that needs to be edited.5. Choose the option to edit the absence record.6. Select the editing action (inserting or deleting the absence).7. Make the necessary changes to the absence details.8. Save the changes to the absence record.9. Notify the user about the edited absence if necessary.10. Logout from the system.
1. Log in to the system as an Administrator.2. Navigate to the section for managing delays.3. Select the delay that needs to be edited.4. Update the details of the delay (e.g., name, duration).5. Save the changes.6. Verify the updated delay information is correctly displayed.7. Log out of the system.
1. Administrator accesses the system.2. Administrator navigates to the list of late entries.3. Administrator selects the late entry that needs to be deleted.4. System displays details of the selected late entry.5. Administrator confirms the deletion action.6. System deletes the late entry from the database.7. System confirms the successful deletion to the Administrator.8. Use case ends.
1. User selects the "View Excused List" option from the main menu.2. System retrieves a list of all excused absences from the database.3. System displays the excused absences list to the user.4. User reviews the list of excused absences.5. User exits the "View Excused List" feature.
1. Retrieve the student's information from the database.2. Retrieve the list of notes associated with the student from the database.3. Display the list of notes to the user interface.4. Allow the user to view and interact with the list of notes.
1. Capture user input for the justification.2. Validate the justification to ensure it meets the required criteria.3. If validation fails, display an error message and prompt the user to provide a valid justification.4. If validation succeeds, save the justification to the database or appropriate data storage.5. Display a success message indicating that the justification has been inserted successfully.
1. User selects the "Disciplinary Notes" option from the main menu.2. System presents a form to enter the details of the disciplinary note.3. User enters the name of the student who committed the disciplinary offense.4. User enters the date and time of the offense.5. User provides a brief description of the offense.6. User selects the type of offense from a predefined list (e.g., cheating, misconduct, etc.).7. User selects the severity level of the offense from a predefined list (e.g., minor, major, etc.).8. User attaches any supporting documents or evidence related to the offense (optional).9. User clicks on the "Submit" button.10. System validates the entered data to ensure all required fields are filled in and in the correct format.11. System saves the disciplinary note record in the database.12. System generates a unique identification number for the disciplinary note.13. System displays a confirmation message to inform the user that the note has been successfully inserted.14. User acknowledges the message and the disciplinary note entry process is complete.
Functional steps to implement the use case "View the details of a justification":1. Select the justification to view details.2. Retrieve the details of the selected justification from the database.3. Display the justification details on the screen.4. Allow the user to navigate through the details if they exceed the screen size.5. Provide options to go back to the previous screen or perform other actions related to the justification details.
1. User selects the "View Note" option from the list of notes.2. System retrieves the selected note details from the database.3. System displays the note details including title, content, date created, and any other relevant information.4. User has the option to edit or delete the note.5. User can navigate back to the list of notes or perform other actions as needed.
1. User selects the option to change password.2. System prompts user to enter current password.3. User inputs current password.4. System verifies the current password.5. If the current password is correct, system prompts user to enter a new password.6. User inputs new password.7. System validates the new password for complexity requirements.8. System prompts user to confirm the new password.9. User inputs the new password again for confirmation.10. System compares the new password with the confirmed password.11. If the passwords match, system updates the user's password.12. System displays a message confirming successful password update.13. Use case ends.
1. User selects the "Edit Justification" option.2. System displays the existing justification text in an editable field.3. User makes the desired changes to the justification text.4. User saves the edited justification.5. System verifies the changes and updates the justification in the database.6. System displays a confirmation message to the user that the justification has been successfully edited.
1. User selects the option to edit a disciplinary note.2. System retrieves the existing disciplinary note details for editing.3. User modifies the disciplinary note content.4. User saves the changes made to the disciplinary note.5. System validates the changes made to the disciplinary note.6. System updates the disciplinary note with the new content.7. System notifies the user that the disciplinary note has been successfully updated.
1. User selects the item to be deleted.2. System prompts user to confirm the deletion.3. User confirms the deletion.4. System removes the item from the database.5. System displays a confirmation message to the user that the item has been successfully deleted.
1. User selects the Disciplinary Notes section from the menu.2. User chooses the specific disciplinary note to be deleted.3. System prompts the user to confirm the deletion action.4. User confirms the deletion action.5. System removes the selected disciplinary note from the database.6. System displays a success message confirming the deletion.7. End of use case.
1. User selects the option to query the system for student information.2. User enters the student ID or name for whom they want to retrieve information.3. System validates the input and searches for the student record in the database.4. System retrieves the number of absences and notes associated with the student.5. System displays the number of absences and notes to the user.6. User can choose to query for another student or exit the system.
1. Log in to the system.2. Navigate to the "Reports" section.3. Select the option to view report cards.4. Choose the specific report card you want to view.5. View the report card details, including grades and comments.6. Option to download or print the report card if needed.7. Log out of the system.
1. Log in to the system as an Administrator.2. Navigate to the "Report Cards" section.3. Select the option to "Enter New Report Card."4. Enter the student's information (e.g., student ID, name, grade level).5. Enter the subject-wise grades for the student (e.g., Math, Science, English).6. Add any additional comments or remarks.7. Review the entered information for accuracy.8. Save the report card information.9. Notify the student or relevant stakeholders about the newly entered report card, if necessary.10. Logout from the system.
1. Display the list of students whose report cards can be edited.2. Select a student from the list to edit their report card.3. Display the current report card information for the selected student.4. Allow the user to edit the report card information such as grades, comments, and attendance.5. Validate the edited information to ensure it meets the required format and criteria.6. Save the edited report card information.7. Display a confirmation message indicating that the report card has been successfully edited.8. Provide an option to edit another student's report card or exit the editing process.
1. Log in to the system as an administrator.2. Navigate to the report cards section in the system.3. Locate the report card that needs to be deleted.4. Select the delete option for the specific report card.5. Confirm the deletion action.6. Verify that the report card has been successfully deleted from the system.7. Log out of the system.
1. Log in to the system as an administrator.2. Navigate to the "Enrollment Requests" section.3. Retrieve the list of enrollment requests from the system.4. Display the list of enrollment requests on the screen.5. Review the details of each enrollment request.6. Take necessary actions based on the enrollment request (approve, deny, or pending).7. Provide feedback or comments if required.8. Update the status of the enrollment request in the system.9. Save the changes.10. Log out from the system.
1. User selects the "View Users" option from the system's main menu.2. System retrieves the list of users from the database.3. System displays the list of users on the screen.4. User can scroll through the list to view all the users.5. User can also use the search functionality to find a specific user.6. User selects a user from the list to view additional details.7. System retrieves the selected user's information from the database.8. System displays the selected user's details on the screen.9. User can go back to the list of users or perform other actions (e.g., edit or delete the user).10. User can exit the "View Users" functionality and return to the main menu.
1. The administrator logs into the system with their credentials.2. The administrator navigates to the enrollment management section.3. The administrator searches for the student's enrollment request.4. The administrator selects the student's enrollment request.5. The system displays the details of the student's enrollment request.6. The administrator reviews the details of the enrollment request.7. The administrator approves the enrollment request.8. The system updates the student's status to enrolled.9. The system notifies the student about the approval of their enrollment request.10. The process is completed.
1. Log in to the system as an administrator.2. Navigate to the student enrollment section.3. Search for the student whose enrollment needs to be rejected.4. Select the option to reject the student's enrollment.5. Provide a reason for rejecting the enrollment, if required.6. Confirm the rejection of the student's enrollment.7. Notify the student about the rejection, if necessary.8. Log out of the system.
1. Administrator inputs keywords for search2. System retrieves entities matching the keywords3. System displays the search results to the administrator
1. User selects the "View Classes" option from the main menu.2. System retrieves the list of available classes from the database.3. System displays the list of classes to the user.4. User may choose to filter or search for specific classes.5. System updates the displayed list according to the user's filter or search criteria.6. User selects a specific class from the list to view more details.7. System retrieves and displays detailed information about the selected class.8. User may choose to go back to the list or perform other actions.9. The use case ends.
1. Identify the data fields required for the Register digitization.2. Develop a user interface for data input for each staff member.3. Implement a module to store data for each staff member, linked to their class.4. Create a function to collect data from staff members class by class.5. Validate the data input to ensure accuracy and consistency.6. Provide a mechanism to update and edit staff data as needed.7. Secure the data by implementing appropriate access control measures.8. Test the data collection process to ensure it functions correctly for each staff member.9. Deploy the system for use by ATA staff for digitizing the Register.
1. Display register digitization interface.2. Prompt user to select the class to collect data from.3. Retrieve the staff data for the selected class from the ATA database.4. Display the staff data for the selected class.5. Prompt user to enter data for each staff member.6. Repeat steps 7-9 for each staff member.7. Prompt user to enter the staff member's name.8. Prompt user to enter the staff member's ID.9. Prompt user to enter any additional required staff member information.10. Save the entered data for the staff member.11. Return to step 6 until all staff members for the selected class have been processed.12. Prompt user if there are additional classes to collect data from.13. If yes, return to step 2.14. If no, end the data collection process.15. Generate a report with the collected staff data.16. Display the generated report to the user.17. End the use case.
1. The teacher logs into the system.2. The teacher navigates to the "Classes" section.3. The system retrieves and displays a list of classes associated with the teacher.4. The teacher selects a specific class to view more details if needed. 5. The system displays the details of the selected class. 6. The teacher can choose to go back to the list of classes or log out of the system.
1. User selects the "View Class Register" option from the main menu.2. System displays a list of classes available for viewing.3. User selects a specific class from the list.4. System retrieves the class register information for the selected class.5. System displays the class register information to the user.6. User has the option to print or save the class register information.
1. Retrieve student information from the database.2. Retrieve course information from the database.3. Retrieve grades information from the database.4. Calculate the total grade for each course.5. Calculate the GPA for the student.6. Display student information on the report card.7. Display course information and corresponding grades on the report card.8. Display total grade for each course on the report card.9. Display GPA on the report card.10. Provide an option to print or save the report card.
1. User requests to view the report card.2. System verifies user access rights.3. System retrieves the report card data for the requesting student.4. System displays the report card to the user.5. User reviews the report card.6. User closes the report card view.
1. Display the user registration form.2. Prompt the user to enter their personal details (e.g., name, email, password).3. Validate the entered information for accuracy and completeness.4. Save the user's information into the database.5. Generate a unique user ID for the new user.6. Assign default user permissions and settings.7. Display a confirmation message to the user that their account has been created successfully.8. End the process.
1. User logs into the system.2. User navigates to the "School Information" section.3. System retrieves and displays the school information related to the user.4. User reviews the displayed information.5. User has the option to edit or update the information if necessary.6. User logs out of the system.
1. Log in to the parent account.2. Navigate to the children section.3. Select the child whose information you want to view.4. View the child's profile, including their name, age, school information, and any other relevant details.5. Optionally, navigate to different sections to view more detailed information about the child, such as academic performance, attendance records, or extracurricular activities. 6. Log out of the parent account.
1. Retrieve student's information from the database.2. Calculate the student's grades based on the available data.3. Generate the report card layout.4. Populate the report card with the student's information and grades.5. Display the report card to the user on the screen.
1. Retrieve student information from the database.2. Filter students with a number of notes and absences above the user-specified threshold.3. Display the list of filtered students along with their respective notes and absences above the threshold.
1. User selects the academic year they want to view records for.2. System retrieves and displays the list of records corresponding to the selected academic year.3. User can scroll through the list of records to view each entry.4. User has the option to filter or search for specific records within the list.5. User can select a specific record to view more detailed information if needed.6. User has the option to go back to the list of records or exit the view.
1. User selects the option to view class register details.2. System retrieves class register information from the database.3. System displays the class register details, including class name, class schedule, and list of enrolled students.4. User has the option to print or save the class register details.5. User can choose to go back to the main menu or log out.
1. User navigates to the "Generate Report Card" section in the software.2. User selects the appropriate criteria for generating the report card (e.g., student name, class, etc.).3. The software retrieves the necessary data from the database based on the selected criteria.4. The software generates the report card based on the retrieved data.5. The software displays the report card to the user on the screen.6. User has the option to print or download the report card if needed.7. The user exits the report card viewing section.
1. User selects the "Register" option.2. System displays the registration form.3. User enters the required information in the form, such as name, email, and password.4. User submits the registration form.5. System validates the entered information.6. System checks if the email is unique and not already registered.7. System generates a unique student ID for the user.8. System creates a new student record with the entered information and the generated student ID.9. System stores the student record in the database.10. System sends a confirmation email to the user.11. System displays a success message to the user indicating that the registration was successful.
1. Open the application2. Log in to the system3. Navigate to the user profile section4. Search for the user by username or user ID5. Select the user from the search results6. View the user's details such as name, email, phone number, address, etc.7. Optionally, edit or update the user's details if necessary8. Save the changes if any9. Log out of the system.
1. Select the user profile or data to be edited.2. Display the current data of the selected user for editing.3. Allow the user to modify the data fields as needed.4. Verify the edited data for accuracy and completeness.5. Save the edited data.6. Update the user information in the system database.7. Display a confirmation message that the data has been successfully edited.
1. User selects the option to manage users in the system.2. System displays a list of existing users.3. User selects the user to delete from the list.4. System prompts for confirmation to delete the user.5. User confirms the deletion.6. System removes the selected user from the system.7. System displays a success message indicating the user has been deleted.8. Use case ends.
